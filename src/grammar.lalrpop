use crate::ast::dml::*;

grammar;

Comma<T>: Vec<T> = {
    <mut v:(<T> ",")*> <e:T?> => match e {
        None=> v,
        Some(e) => {
            v.push(e);
            v
        }
    }
};

Semicolon<T>: Vec<T> = {
    <mut v:(<T> ";")*> <e:T?> => match e {
        None=> v,
        Some(e) => {
            v.push(e);
            v
        }
    }
};

pub Exprs = Semicolon<Expr>;

Expr: SelectNode = {
    "select" <fields: Fields> "from" <result_table: ResultTable> => SelectNode{
        fields,
        result_table,
    }
};

Name: String = r"[0-9a-zA-Z_.]+" => <>.into();

pub Fields = Comma<Field>;

pub Field: Field = {
    "*" => Field::All,
    Name => Field::Name(<>.into())
};

ResultTable = Name;
